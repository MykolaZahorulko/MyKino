@use 'sass:math';
/* --- FONTS --- */
@font-face {
  font-family: 'Avenir Next Cyr';
  src: url('../fonts/AvenirNextCyr-Light.ttf') format('ttf'),
       url('../fonts/AvenirNextCyr-Light.eot') format('eot');
  font-weight: 300;
  font-style: normal;
}
@font-face {
  font-family: 'Avenir Next Cyr';
  src: url('../fonts/AvenirNextCyr-Regular.ttf') format('ttf'),
       url('../fonts/AvenirNextCyr-Regular.eot') format('eot');
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: 'Avenir Next Cyr';
  src: url('../fonts/AvenirNextCyr-Bold.ttf') format('ttf'),
       url('../fonts/AvenirNextCyr-Bold.eot') format('eot');
  font-weight: 700;
  font-style: normal;
}
@mixin flexbox(){display: flex;display:-webkit-flex;display: -moz-flex;display: -o-flex;}
@mixin objf($size){object-fit: $size;-webkit-object-fit: $size;-moz-object-fit: $size;-o-object-fit: $size;}
@mixin objp($pos){object-position: $pos;-webkit-object-position: $pos;-moz-object-position: $pos;-o-object-position: $pos;}
@mixin anim($name,$time,$scenariy,$howmany,$delay) {animation: $name $time $scenariy $howmany $delay;-webkit-animation: $name $time $scenariy $howmany $delay;-moz-animation: $name $time $scenariy $howmany $delay;-o-animation: $name $time $scenariy $howmany $delay}
@mixin rotate($deg){transform: rotate($deg);-webkit-transform: rotate($deg);-moz-transform: rotate($deg);-o-transform: rotate($deg);}
@mixin translate($degX, $degY) {transform: translate($degX, $degY);-webkit-transform: translate($degX, $degY);-moz-transform: translate($degX, $degY);-o-transform: translate($degX, $degY);}
@mixin scale($num){transform: scale($num);-webkit-transform: scale($num);-moz-transform: scale($num);-o-transform: scale($num);}
@mixin flexboxinline() {display: inline-flex;display:-webkit-inline-flex;-moz-display: inline-flex;-o-display: inline-flex;}
@mixin transition($all, $time, $scenariy, $delay) {transition: $all $time $scenariy $delay;-webkit-transition: $all $time $scenariy $delay;-moz-transition: $all $time $scenariy $delay;-o-transition: $all $time $scenariy $delay;}
@mixin box-shadow($shadow) {-webkit-box-shadow: $shadow;-moz-box-shadow: $shadow;-o-box-shadow: $shadow;box-shadow: $shadow;}
@mixin border-radius($radius) {-webkit-border-radius: $radius;-moz-border-radius: $radius;-o-border-radius: $radius;border-radius: $radius;}
@mixin text-overflow($value) {-webkit-text-overflow: $value;-moz-text-overflow: $value;-o-text-overflow: $value;text-overflow: $value;}
@mixin blur($num) {backdrop-filter: blur($num);-webkit-backdrop-filter: blur($num);-moz-backdrop-filter: blur($num);-ms-backdrop-filter: blur($num);-o-backdrop-filter: blur($num);}
//----------------------------------------------------------------------------------------
//ADAPTIVE VALUE
$maxWidth: 1980;/* --- Here we are write enter layout width {ALL} without PX --- */
$maxWidthContainer: 1440;/* --- Here we are enter container width without PX --- */
$ff: "Avenir Next Cyr", Helvetica, Arial, sans-serif;
$fz: 16; /* --- Here we are enter general font size value on the website without PX ---   */
// TO%
@function prc($pxOne, $pxTwo) {
    $result: math.div($pxOne, $pxTwo) * 100%;
    @return $result;
}
//REM
@function rem($px) {
    $result: math.div($px, $fz) + rem;
    @return $result;
}
//EM
@function em($px) {
    $result: math.div($px, $fz) + em;
    @return $result;
}
//CONTAINER CLASS
.container {max-width: rem($maxWidthContainer);margin: 0 auto;}
//ANOTHER STYLES
.img {position: relative;width: rem(20);height: rem(20); img, svg {position: absolute;top: 0;left: 0;width: 100%;height: 100%;@include objf(cover);@include objp(center);}}
//----------------------------------------------------------------------------------------
@mixin adaptiv-value($property, $starSize, $minSize, $type) {
  $addSize: $starSize - $minSize;
  @if $type == 1 {
    // Якщо менше контейнера
    #{$property}: $starSize + px;
    @media (max-width: calc(#{$maxWidthContainer} / #{$fz} * 1em)) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  } @else if $type == 2 {
    // Якщо більше контейнера
    #{$property}: $starSize + px;
    @media (min-width: calc(#{$maxWidthContainer} / #{$fz} * 1em)) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  } @else {
    // Завжди
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
  }
}
//----------------------------------------------------------------------------------------
